
state 0
	$accept: .program $end 
	package_head: .    (2)

	PACKAGE  shift 3
	.  reduce 2 (src line 93)

	program  goto 1
	package_head  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


2: shift/reduce conflict (shift 6(0), red'n 5(0)) on INCLUDE
state 2
	program:  package_head.include_head struct_head const_head body 
	include_head: .    (5)

	INCLUDE  shift 6
	.  reduce 5 (src line 112)

	include_head  goto 4
	include_define  goto 5

state 3
	package_head:  PACKAGE.IDENTIFIER 
	package_head:  PACKAGE.IDENTIFIER_DOT 

	IDENTIFIER  shift 7
	IDENTIFIER_DOT  shift 8
	.  error


4: shift/reduce conflict (shift 12(0), red'n 9(0)) on STRUCT
state 4
	program:  package_head include_head.struct_head const_head body 
	include_head:  include_head.include_define 
	struct_head: .    (9)

	INCLUDE  shift 6
	STRUCT  shift 12
	.  reduce 9 (src line 131)

	struct_head  goto 9
	include_define  goto 10
	struct_define  goto 11

state 5
	include_head:  include_define.    (6)

	.  reduce 6 (src line 116)


state 6
	include_define:  INCLUDE.STRING_DEFINITION 

	STRING_DEFINITION  shift 13
	.  error


state 7
	package_head:  PACKAGE IDENTIFIER.    (3)

	.  reduce 3 (src line 97)


state 8
	package_head:  PACKAGE IDENTIFIER_DOT.    (4)

	.  reduce 4 (src line 104)


9: shift/reduce conflict (shift 17(0), red'n 16(0)) on FCONST
state 9
	program:  package_head include_head struct_head.const_head body 
	struct_head:  struct_head.struct_define 
	const_head: .    (16)

	FCONST  shift 17
	STRUCT  shift 12
	.  reduce 16 (src line 176)

	const_head  goto 14
	struct_define  goto 15
	const_define  goto 16

state 10
	include_head:  include_head include_define.    (7)

	.  reduce 7 (src line 118)


state 11
	struct_head:  struct_define.    (10)

	.  reduce 10 (src line 135)


state 12
	struct_define:  STRUCT.IDENTIFIER struct_mem_declaration END 

	IDENTIFIER  shift 18
	.  error


state 13
	include_define:  INCLUDE STRING_DEFINITION.    (8)

	.  reduce 8 (src line 122)


14: shift/reduce conflict (shift 22(0), red'n 20(0)) on FUNC
state 14
	program:  package_head include_head struct_head const_head.body 
	const_head:  const_head.const_define 
	body: .    (20)

	FUNC  shift 22
	FCONST  shift 17
	.  reduce 20 (src line 195)

	body  goto 19
	const_define  goto 20
	function_declaration  goto 21

state 15
	struct_head:  struct_head struct_define.    (11)

	.  reduce 11 (src line 137)


state 16
	const_head:  const_define.    (17)

	.  reduce 17 (src line 180)


state 17
	const_define:  FCONST.IDENTIFIER ASSIGN explicit_value 

	IDENTIFIER  shift 23
	.  error


18: shift/reduce conflict (shift 25(0), red'n 13(0)) on IDENTIFIER
state 18
	struct_define:  STRUCT IDENTIFIER.struct_mem_declaration END 
	struct_mem_declaration: .    (13)

	IDENTIFIER  shift 25
	.  reduce 13 (src line 153)

	struct_mem_declaration  goto 24

state 19
	program:  package_head include_head struct_head const_head body.    (1)
	body:  body.function_declaration 

	FUNC  shift 22
	.  reduce 1 (src line 86)

	function_declaration  goto 26

state 20
	const_head:  const_head const_define.    (18)

	.  reduce 18 (src line 182)


state 21
	body:  function_declaration.    (21)

	.  reduce 21 (src line 199)


state 22
	function_declaration:  FUNC.IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC.IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END 

	IDENTIFIER  shift 27
	.  error


state 23
	const_define:  FCONST IDENTIFIER.ASSIGN explicit_value 

	ASSIGN  shift 28
	.  error


state 24
	struct_define:  STRUCT IDENTIFIER struct_mem_declaration.END 
	struct_mem_declaration:  struct_mem_declaration.IDENTIFIER 

	END  shift 29
	IDENTIFIER  shift 30
	.  error


state 25
	struct_mem_declaration:  IDENTIFIER.    (15)

	.  reduce 15 (src line 166)


state 26
	body:  body function_declaration.    (22)

	.  reduce 22 (src line 201)


state 27
	function_declaration:  FUNC IDENTIFIER.OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER.OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END 

	OPEN_BRACKET  shift 31
	.  error


state 28
	const_define:  FCONST IDENTIFIER ASSIGN.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 32

state 29
	struct_define:  STRUCT IDENTIFIER struct_mem_declaration END.    (12)

	.  reduce 12 (src line 141)


state 30
	struct_mem_declaration:  struct_mem_declaration IDENTIFIER.    (14)

	.  reduce 14 (src line 158)


state 31
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET.function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET.function_declaration_arguments CLOSE_BRACKET END 
	function_declaration_arguments: .    (25)

	IDENTIFIER  shift 44
	.  reduce 25 (src line 235)

	function_declaration_arguments  goto 42
	arg  goto 43

state 32
	const_define:  FCONST IDENTIFIER ASSIGN explicit_value.    (19)

	.  reduce 19 (src line 186)


state 33
	explicit_value:  FTRUE.    (130)

	.  reduce 130 (src line 1190)


state 34
	explicit_value:  FFALSE.    (131)

	.  reduce 131 (src line 1199)


state 35
	explicit_value:  NUMBER.    (132)

	.  reduce 132 (src line 1208)


state 36
	explicit_value:  FKUUID.    (133)

	.  reduce 133 (src line 1217)


state 37
	explicit_value:  STRING_DEFINITION.    (134)

	.  reduce 134 (src line 1226)


state 38
	explicit_value:  FKFLOAT.    (135)

	.  reduce 135 (src line 1235)


state 39
	explicit_value:  FNULL.    (136)

	.  reduce 136 (src line 1244)


40: shift/reduce conflict (shift 33(0), red'n 139(0)) on FTRUE
40: shift/reduce conflict (shift 34(0), red'n 139(0)) on FFALSE
40: shift/reduce conflict (shift 37(0), red'n 139(0)) on STRING_DEFINITION
40: shift/reduce conflict (shift 35(0), red'n 139(0)) on NUMBER
40: shift/reduce conflict (shift 38(0), red'n 139(0)) on FKFLOAT
40: shift/reduce conflict (shift 36(0), red'n 139(0)) on FKUUID
40: shift/reduce conflict (shift 41(0), red'n 139(0)) on OPEN_SQUARE_BRACKET
40: shift/reduce conflict (shift 40(0), red'n 139(0)) on OPEN_BIG_BRACKET
40: shift/reduce conflict (shift 39(0), red'n 139(0)) on FNULL
state 40
	explicit_value:  OPEN_BIG_BRACKET.const_map_list_value CLOSE_BIG_BRACKET 
	const_map_list_value: .    (139)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 139 (src line 1275)

	explicit_value  goto 47
	const_map_list_value  goto 45
	const_map_value  goto 46

41: shift/reduce conflict (shift 33(0), red'n 143(0)) on FTRUE
41: shift/reduce conflict (shift 34(0), red'n 143(0)) on FFALSE
41: shift/reduce conflict (shift 37(0), red'n 143(0)) on STRING_DEFINITION
41: shift/reduce conflict (shift 35(0), red'n 143(0)) on NUMBER
41: shift/reduce conflict (shift 38(0), red'n 143(0)) on FKFLOAT
41: shift/reduce conflict (shift 36(0), red'n 143(0)) on FKUUID
41: shift/reduce conflict (shift 41(0), red'n 143(0)) on OPEN_SQUARE_BRACKET
41: shift/reduce conflict (shift 40(0), red'n 143(0)) on OPEN_BIG_BRACKET
41: shift/reduce conflict (shift 39(0), red'n 143(0)) on FNULL
state 41
	explicit_value:  OPEN_SQUARE_BRACKET.const_array_list_value CLOSE_SQUARE_BRACKET 
	const_array_list_value: .    (143)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 143 (src line 1311)

	explicit_value  goto 49
	const_array_list_value  goto 48

state 42
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments.CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments.CLOSE_BRACKET END 
	function_declaration_arguments:  function_declaration_arguments.ARG_SPLITTER arg 

	ARG_SPLITTER  shift 51
	CLOSE_BRACKET  shift 50
	.  error


state 43
	function_declaration_arguments:  arg.    (27)

	.  reduce 27 (src line 248)


state 44
	arg:  IDENTIFIER.    (28)

	.  reduce 28 (src line 258)


state 45
	explicit_value:  OPEN_BIG_BRACKET const_map_list_value.CLOSE_BIG_BRACKET 
	const_map_list_value:  const_map_list_value.const_map_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	CLOSE_BIG_BRACKET  shift 52
	FNULL  shift 39
	.  error

	explicit_value  goto 47
	const_map_value  goto 53

state 46
	const_map_list_value:  const_map_value.    (140)

	.  reduce 140 (src line 1282)


state 47
	const_map_value:  explicit_value.COLON explicit_value 

	COLON  shift 54
	.  error


state 48
	explicit_value:  OPEN_SQUARE_BRACKET const_array_list_value.CLOSE_SQUARE_BRACKET 
	const_array_list_value:  const_array_list_value.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	CLOSE_SQUARE_BRACKET  shift 55
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 56

state 49
	const_array_list_value:  explicit_value.    (144)

	.  reduce 144 (src line 1318)


state 50
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET.block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 58
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 57
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 51
	function_declaration_arguments:  function_declaration_arguments ARG_SPLITTER.arg 

	IDENTIFIER  shift 44
	.  error

	arg  goto 93

state 52
	explicit_value:  OPEN_BIG_BRACKET const_map_list_value CLOSE_BIG_BRACKET.    (137)

	.  reduce 137 (src line 1253)


state 53
	const_map_list_value:  const_map_list_value const_map_value.    (141)

	.  reduce 141 (src line 1290)


state 54
	const_map_value:  explicit_value COLON.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 94

state 55
	explicit_value:  OPEN_SQUARE_BRACKET const_array_list_value CLOSE_SQUARE_BRACKET.    (138)

	.  reduce 138 (src line 1263)


state 56
	const_array_list_value:  const_array_list_value explicit_value.    (145)

	.  reduce 145 (src line 1326)


state 57
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block.END 
	block:  block.stmt 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 95
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 58
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END.    (24)

	.  reduce 24 (src line 220)


state 59
	block:  stmt.    (39)

	.  reduce 39 (src line 387)


state 60
	stmt:  while_stmt.    (40)

	.  reduce 40 (src line 397)


state 61
	stmt:  if_stmt.    (41)

	.  reduce 41 (src line 403)


state 62
	stmt:  return_stmt.    (42)

	.  reduce 42 (src line 409)


state 63
	stmt:  assign_stmt.    (43)

	.  reduce 43 (src line 415)


state 64
	stmt:  multi_assign_stmt.    (44)

	.  reduce 44 (src line 421)


state 65
	stmt:  break.    (45)

	.  reduce 45 (src line 427)


state 66
	stmt:  continue.    (46)

	.  reduce 46 (src line 433)


state 67
	stmt:  expr.    (47)

	.  reduce 47 (src line 439)


state 68
	stmt:  math_assign_stmt.    (48)

	.  reduce 48 (src line 445)


state 69
	stmt:  for_stmt.    (49)

	.  reduce 49 (src line 451)


state 70
	stmt:  for_loop_stmt.    (50)

	.  reduce 50 (src line 457)


state 71
	stmt:  fake_call_stmt.    (51)

	.  reduce 51 (src line 463)


state 72
	stmt:  switch_stmt.    (52)

	.  reduce 52 (src line 469)


state 73
	while_stmt:  WHILE.cmp THEN block END 
	while_stmt:  WHILE.cmp THEN END 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 97
	cmp_value  goto 99
	math_expr  goto 82

state 74
	if_stmt:  IF.cmp THEN block elseif_stmt_list else_stmt END 
	if_stmt:  IF.cmp THEN elseif_stmt_list else_stmt END 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 107
	cmp_value  goto 99
	math_expr  goto 82

75: shift/reduce conflict (shift 33(0), red'n 89(0)) on FTRUE
75: shift/reduce conflict (shift 34(0), red'n 89(0)) on FFALSE
75: shift/reduce conflict (shift 37(0), red'n 89(0)) on STRING_DEFINITION
75: shift/reduce conflict (shift 88(0), red'n 89(0)) on IDENTIFIER
75: shift/reduce conflict (shift 35(0), red'n 89(0)) on NUMBER
75: shift/reduce conflict (shift 80(0), red'n 89(0)) on OPEN_BRACKET
75: shift/reduce conflict (shift 38(0), red'n 89(0)) on FKFLOAT
75: shift/reduce conflict (shift 36(0), red'n 89(0)) on FKUUID
75: shift/reduce conflict (shift 41(0), red'n 89(0)) on OPEN_SQUARE_BRACKET
75: shift/reduce conflict (shift 89(0), red'n 89(0)) on IDENTIFIER_DOT
75: shift/reduce conflict (shift 91(0), red'n 89(0)) on IDENTIFIER_POINTER
75: shift/reduce conflict (shift 40(0), red'n 89(0)) on OPEN_BIG_BRACKET
75: shift/reduce conflict (shift 39(0), red'n 89(0)) on FNULL
state 75
	return_stmt:  RETURN.return_value_list 
	return_stmt:  RETURN.    (89)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 89 (src line 829)

	explicit_value  goto 110
	function_call  goto 81
	variable  goto 111
	expr_value  goto 90
	expr  goto 112
	return_value_list  goto 108
	return_value  goto 109
	math_expr  goto 82

76: shift/reduce conflict (shift 113(0), red'n 100(0)) on ASSIGN
76: shift/reduce conflict (shift 114(0), red'n 100(0)) on NEW_ASSIGN
state 76
	assign_stmt:  var.ASSIGN assign_value 
	assign_stmt:  var.NEW_ASSIGN assign_value 
	var_list:  var.    (100)

	ASSIGN  shift 113
	NEW_ASSIGN  shift 114
	.  reduce 100 (src line 929)


state 77
	multi_assign_stmt:  var_list.ASSIGN function_call 
	multi_assign_stmt:  var_list.NEW_ASSIGN function_call 
	var_list:  var_list.ARG_SPLITTER var 

	ARG_SPLITTER  shift 117
	ASSIGN  shift 115
	NEW_ASSIGN  shift 116
	.  error


state 78
	break:  BREAK.    (146)

	.  reduce 146 (src line 1336)


state 79
	continue:  CONTINUE.    (147)

	.  reduce 147 (src line 1345)


state 80
	expr:  OPEN_BRACKET.expr CLOSE_BRACKET 
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 120
	expr_value  goto 90
	expr  goto 118
	math_expr  goto 119

81: shift/reduce conflict (shift 121(0), red'n 117(0)) on OPEN_BRACKET
state 81
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr:  function_call.    (117)
	expr_value:  function_call.    (128)

	DIVIDE_MOD  reduce 128 (src line 1176)
	PLUS  reduce 128 (src line 1176)
	MINUS  reduce 128 (src line 1176)
	DIVIDE  reduce 128 (src line 1176)
	MULTIPLY  reduce 128 (src line 1176)
	OPEN_BRACKET  shift 121
	COLON  shift 122
	STRING_CAT  reduce 128 (src line 1176)
	.  reduce 117 (src line 1082)


state 82
	expr:  math_expr.    (118)
	expr_value:  math_expr.    (126)

	DIVIDE_MOD  reduce 126 (src line 1164)
	PLUS  reduce 126 (src line 1164)
	MINUS  reduce 126 (src line 1164)
	DIVIDE  reduce 126 (src line 1164)
	MULTIPLY  reduce 126 (src line 1164)
	STRING_CAT  reduce 126 (src line 1164)
	.  reduce 118 (src line 1088)


state 83
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	math_assign_stmt:  variable.PLUS_ASSIGN assign_value 
	math_assign_stmt:  variable.MINUS_ASSIGN assign_value 
	math_assign_stmt:  variable.DIVIDE_ASSIGN assign_value 
	math_assign_stmt:  variable.MULTIPLY_ASSIGN assign_value 
	math_assign_stmt:  variable.DIVIDE_MOD_ASSIGN assign_value 
	math_assign_stmt:  variable.INC 
	var:  variable.    (111)
	expr_value:  variable.    (129)

	ARG_SPLITTER  reduce 111 (src line 1033)
	ASSIGN  reduce 111 (src line 1033)
	PLUS_ASSIGN  shift 124
	MINUS_ASSIGN  shift 125
	DIVIDE_ASSIGN  shift 126
	MULTIPLY_ASSIGN  shift 127
	DIVIDE_MOD_ASSIGN  shift 128
	COLON  shift 123
	INC  shift 129
	NEW_ASSIGN  reduce 111 (src line 1033)
	.  reduce 129 (src line 1182)


state 84
	for_stmt:  FOR.block ARG_SPLITTER cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR.block ARG_SPLITTER cmp ARG_SPLITTER block THEN END 
	for_loop_stmt:  FOR.var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR.var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 130
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 131
	var_list  goto 77
	math_expr  goto 82

state 85
	fake_call_stmt:  FAKE.function_call 

	IDENTIFIER  shift 88
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	.  error

	function_call  goto 132
	variable  goto 133

state 86
	switch_stmt:  SWITCH.cmp_value switch_case_list DEFAULT block END 
	switch_stmt:  SWITCH.cmp_value switch_case_list DEFAULT END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 134
	math_expr  goto 82

state 87
	var:  VAR_BEGIN.IDENTIFIER 

	IDENTIFIER  shift 135
	.  error


88: shift/reduce conflict (shift 136(0), red'n 112(0)) on OPEN_BRACKET
88: shift/reduce conflict (shift 137(0), red'n 112(0)) on OPEN_SQUARE_BRACKET
state 88
	function_call:  IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	variable:  IDENTIFIER.    (112)
	variable:  IDENTIFIER.OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET 

	OPEN_BRACKET  shift 136
	OPEN_SQUARE_BRACKET  shift 137
	.  reduce 112 (src line 1041)


89: shift/reduce conflict (shift 138(0), red'n 115(0)) on OPEN_BRACKET
state 89
	function_call:  IDENTIFIER_DOT.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	variable:  IDENTIFIER_DOT.    (115)

	OPEN_BRACKET  shift 138
	.  reduce 115 (src line 1066)


state 90
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 143
	PLUS  shift 139
	MINUS  shift 140
	DIVIDE  shift 142
	MULTIPLY  shift 141
	STRING_CAT  shift 144
	.  error


state 91
	variable:  IDENTIFIER_POINTER.    (114)

	.  reduce 114 (src line 1058)


state 92
	expr_value:  explicit_value.    (127)

	.  reduce 127 (src line 1170)


state 93
	function_declaration_arguments:  function_declaration_arguments ARG_SPLITTER arg.    (26)

	.  reduce 26 (src line 240)


state 94
	const_map_value:  explicit_value COLON explicit_value.    (142)

	.  reduce 142 (src line 1300)


state 95
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END.    (23)

	.  reduce 23 (src line 207)


state 96
	block:  block stmt.    (38)

	.  reduce 38 (src line 379)


state 97
	while_stmt:  WHILE cmp.THEN block END 
	while_stmt:  WHILE cmp.THEN END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 145
	AND  shift 146
	OR  shift 147
	.  error


state 98
	cmp:  OPEN_BRACKET.cmp CLOSE_BRACKET 
	expr:  OPEN_BRACKET.expr CLOSE_BRACKET 
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 149
	cmp  goto 148
	cmp_value  goto 99
	math_expr  goto 119

state 99
	cmp:  cmp_value.LESS cmp_value 
	cmp:  cmp_value.MORE cmp_value 
	cmp:  cmp_value.EQUAL cmp_value 
	cmp:  cmp_value.MORE_OR_EQUAL cmp_value 
	cmp:  cmp_value.LESS_OR_EQUAL cmp_value 
	cmp:  cmp_value.NOT_EQUAL cmp_value 

	MORE  shift 151
	LESS  shift 150
	MORE_OR_EQUAL  shift 153
	LESS_OR_EQUAL  shift 154
	EQUAL  shift 152
	NOT_EQUAL  shift 155
	.  error


state 100
	cmp:  FTRUE.    (81)
	explicit_value:  FTRUE.    (130)

	THEN  reduce 81 (src line 759)
	ARG_SPLITTER  reduce 81 (src line 759)
	CLOSE_BRACKET  reduce 81 (src line 759)
	AND  reduce 81 (src line 759)
	OR  reduce 81 (src line 759)
	.  reduce 130 (src line 1190)


state 101
	cmp:  FFALSE.    (82)
	explicit_value:  FFALSE.    (131)

	THEN  reduce 82 (src line 769)
	ARG_SPLITTER  reduce 82 (src line 769)
	CLOSE_BRACKET  reduce 82 (src line 769)
	AND  reduce 82 (src line 769)
	OR  reduce 82 (src line 769)
	.  reduce 131 (src line 1199)


state 102
	cmp:  IS.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 156
	math_expr  goto 82

state 103
	cmp:  NOT.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 157
	math_expr  goto 82

state 104
	cmp_value:  explicit_value.    (85)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1170)
	PLUS  reduce 127 (src line 1170)
	MINUS  reduce 127 (src line 1170)
	DIVIDE  reduce 127 (src line 1170)
	MULTIPLY  reduce 127 (src line 1170)
	STRING_CAT  reduce 127 (src line 1170)
	.  reduce 85 (src line 801)


state 105
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	cmp_value:  variable.    (86)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1182)
	PLUS  reduce 129 (src line 1182)
	MINUS  reduce 129 (src line 1182)
	DIVIDE  reduce 129 (src line 1182)
	MULTIPLY  reduce 129 (src line 1182)
	COLON  shift 123
	STRING_CAT  reduce 129 (src line 1182)
	.  reduce 86 (src line 807)


state 106
	cmp_value:  expr.    (87)

	.  reduce 87 (src line 813)


state 107
	if_stmt:  IF cmp.THEN block elseif_stmt_list else_stmt END 
	if_stmt:  IF cmp.THEN elseif_stmt_list else_stmt END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 158
	AND  shift 146
	OR  shift 147
	.  error


108: shift/reduce conflict (shift 159(0), red'n 88(0)) on ARG_SPLITTER
state 108
	return_stmt:  RETURN return_value_list.    (88)
	return_value_list:  return_value_list.ARG_SPLITTER return_value 

	ARG_SPLITTER  shift 159
	.  reduce 88 (src line 821)


state 109
	return_value_list:  return_value.    (91)

	.  reduce 91 (src line 847)


state 110
	return_value:  explicit_value.    (92)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1170)
	PLUS  reduce 127 (src line 1170)
	MINUS  reduce 127 (src line 1170)
	DIVIDE  reduce 127 (src line 1170)
	MULTIPLY  reduce 127 (src line 1170)
	STRING_CAT  reduce 127 (src line 1170)
	.  reduce 92 (src line 857)


state 111
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	return_value:  variable.    (93)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1182)
	PLUS  reduce 129 (src line 1182)
	MINUS  reduce 129 (src line 1182)
	DIVIDE  reduce 129 (src line 1182)
	MULTIPLY  reduce 129 (src line 1182)
	COLON  shift 123
	STRING_CAT  reduce 129 (src line 1182)
	.  reduce 93 (src line 863)


state 112
	return_value:  expr.    (94)

	.  reduce 94 (src line 869)


state 113
	assign_stmt:  var ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 160
	math_expr  goto 82

state 114
	assign_stmt:  var NEW_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 164
	math_expr  goto 82

state 115
	multi_assign_stmt:  var_list ASSIGN.function_call 

	IDENTIFIER  shift 88
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	.  error

	function_call  goto 165
	variable  goto 133

state 116
	multi_assign_stmt:  var_list NEW_ASSIGN.function_call 

	IDENTIFIER  shift 88
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	.  error

	function_call  goto 166
	variable  goto 133

state 117
	var_list:  var_list ARG_SPLITTER.var 

	VAR_BEGIN  shift 87
	IDENTIFIER  shift 169
	IDENTIFIER_DOT  shift 170
	IDENTIFIER_POINTER  shift 91
	.  error

	variable  goto 168
	var  goto 167

state 118
	expr:  OPEN_BRACKET expr.CLOSE_BRACKET 

	CLOSE_BRACKET  shift 171
	.  error


119: shift/reduce conflict (shift 172(0), red'n 118(0)) on CLOSE_BRACKET
state 119
	expr:  math_expr.    (118)
	math_expr:  OPEN_BRACKET math_expr.CLOSE_BRACKET 
	expr_value:  math_expr.    (126)

	MORE  reduce 118 (src line 1088)
	LESS  reduce 118 (src line 1088)
	MORE_OR_EQUAL  reduce 118 (src line 1088)
	LESS_OR_EQUAL  reduce 118 (src line 1088)
	EQUAL  reduce 118 (src line 1088)
	NOT_EQUAL  reduce 118 (src line 1088)
	CLOSE_BRACKET  shift 172
	.  reduce 126 (src line 1164)


state 120
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr_value:  variable.    (129)

	COLON  shift 123
	.  reduce 129 (src line 1182)


state 121
	function_call:  function_call OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 346)

	explicit_value  goto 92
	function_call  goto 177
	function_call_arguments  goto 173
	variable  goto 120
	arg_expr  goto 174
	expr_value  goto 175
	math_expr  goto 176

state 122
	function_call:  function_call COLON.IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	IDENTIFIER  shift 179
	.  error


state 123
	function_call:  variable COLON.IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	IDENTIFIER  shift 180
	.  error


state 124
	math_assign_stmt:  variable PLUS_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 181
	math_expr  goto 82

state 125
	math_assign_stmt:  variable MINUS_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 182
	math_expr  goto 82

state 126
	math_assign_stmt:  variable DIVIDE_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 183
	math_expr  goto 82

state 127
	math_assign_stmt:  variable MULTIPLY_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 184
	math_expr  goto 82

state 128
	math_assign_stmt:  variable DIVIDE_MOD_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 161
	function_call  goto 81
	variable  goto 162
	expr_value  goto 90
	expr  goto 163
	assign_value  goto 185
	math_expr  goto 82

state 129
	math_assign_stmt:  variable INC.    (109)

	.  reduce 109 (src line 1009)


state 130
	block:  block.stmt 
	for_stmt:  FOR block.ARG_SPLITTER cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block.ARG_SPLITTER cmp ARG_SPLITTER block THEN END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	ARG_SPLITTER  shift 186
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

131: shift/reduce conflict (shift 187(0), red'n 100(0)) on ASSIGN
131: shift/reduce conflict (shift 114(0), red'n 100(0)) on NEW_ASSIGN
state 131
	for_loop_stmt:  FOR var.ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR var.ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN END 
	assign_stmt:  var.ASSIGN assign_value 
	assign_stmt:  var.NEW_ASSIGN assign_value 
	var_list:  var.    (100)

	ASSIGN  shift 187
	NEW_ASSIGN  shift 114
	.  reduce 100 (src line 929)


132: shift/reduce conflict (shift 121(0), red'n 53(0)) on OPEN_BRACKET
state 132
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	fake_call_stmt:  FAKE function_call.    (53)

	OPEN_BRACKET  shift 121
	COLON  shift 122
	.  reduce 53 (src line 477)


state 133
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	COLON  shift 123
	.  error


state 134
	switch_stmt:  SWITCH cmp_value.switch_case_list DEFAULT block END 
	switch_stmt:  SWITCH cmp_value.switch_case_list DEFAULT END 

	CASE  shift 190
	.  error

	switch_case_list  goto 188
	switch_case_define  goto 189

state 135
	var:  VAR_BEGIN IDENTIFIER.    (110)

	.  reduce 110 (src line 1025)


state 136
	function_call:  IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 346)

	explicit_value  goto 92
	function_call  goto 177
	function_call_arguments  goto 191
	variable  goto 120
	arg_expr  goto 174
	expr_value  goto 175
	math_expr  goto 176

state 137
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET.expr_value CLOSE_SQUARE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 192
	math_expr  goto 176

state 138
	function_call:  IDENTIFIER_DOT OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 346)

	explicit_value  goto 92
	function_call  goto 177
	function_call_arguments  goto 193
	variable  goto 120
	arg_expr  goto 174
	expr_value  goto 175
	math_expr  goto 176

state 139
	math_expr:  expr_value PLUS.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 194
	math_expr  goto 176

state 140
	math_expr:  expr_value MINUS.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 195
	math_expr  goto 176

state 141
	math_expr:  expr_value MULTIPLY.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 196
	math_expr  goto 176

state 142
	math_expr:  expr_value DIVIDE.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 197
	math_expr  goto 176

state 143
	math_expr:  expr_value DIVIDE_MOD.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 198
	math_expr  goto 176

state 144
	math_expr:  expr_value STRING_CAT.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 199
	math_expr  goto 176

state 145
	while_stmt:  WHILE cmp THEN.block END 
	while_stmt:  WHILE cmp THEN.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 201
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 200
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 146
	cmp:  cmp AND.cmp 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 202
	cmp_value  goto 99
	math_expr  goto 82

state 147
	cmp:  cmp OR.cmp 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 203
	cmp_value  goto 99
	math_expr  goto 82

state 148
	cmp:  OPEN_BRACKET cmp.CLOSE_BRACKET 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	CLOSE_BRACKET  shift 204
	AND  shift 146
	OR  shift 147
	.  error


state 149
	cmp_value:  expr.    (87)
	expr:  OPEN_BRACKET expr.CLOSE_BRACKET 

	CLOSE_BRACKET  shift 171
	.  reduce 87 (src line 813)


state 150
	cmp:  cmp_value LESS.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 205
	math_expr  goto 82

state 151
	cmp:  cmp_value MORE.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 206
	math_expr  goto 82

state 152
	cmp:  cmp_value EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 207
	math_expr  goto 82

state 153
	cmp:  cmp_value MORE_OR_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 208
	math_expr  goto 82

state 154
	cmp:  cmp_value LESS_OR_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 209
	math_expr  goto 82

state 155
	cmp:  cmp_value NOT_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 210
	math_expr  goto 82

state 156
	cmp:  IS cmp_value.    (83)

	.  reduce 83 (src line 779)


state 157
	cmp:  NOT cmp_value.    (84)

	.  reduce 84 (src line 789)


158: shift/reduce conflict (shift 214(0), red'n 64(0)) on ELSEIF
state 158
	if_stmt:  IF cmp THEN.block elseif_stmt_list else_stmt END 
	if_stmt:  IF cmp THEN.elseif_stmt_list else_stmt END 
	elseif_stmt_list: .    (64)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	ELSEIF  shift 214
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 64 (src line 607)

	explicit_value  goto 92
	block  goto 211
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	elseif_stmt_list  goto 212
	elseif_stmt  goto 213
	var_list  goto 77
	math_expr  goto 82

state 159
	return_value_list:  return_value_list ARG_SPLITTER.return_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 110
	function_call  goto 81
	variable  goto 111
	expr_value  goto 90
	expr  goto 112
	return_value  goto 215
	math_expr  goto 82

state 160
	assign_stmt:  var ASSIGN assign_value.    (95)

	.  reduce 95 (src line 877)


state 161
	assign_value:  explicit_value.    (101)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1170)
	PLUS  reduce 127 (src line 1170)
	MINUS  reduce 127 (src line 1170)
	DIVIDE  reduce 127 (src line 1170)
	MULTIPLY  reduce 127 (src line 1170)
	STRING_CAT  reduce 127 (src line 1170)
	.  reduce 101 (src line 939)


state 162
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	assign_value:  variable.    (102)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1182)
	PLUS  reduce 129 (src line 1182)
	MINUS  reduce 129 (src line 1182)
	DIVIDE  reduce 129 (src line 1182)
	MULTIPLY  reduce 129 (src line 1182)
	COLON  shift 123
	STRING_CAT  reduce 129 (src line 1182)
	.  reduce 102 (src line 945)


state 163
	assign_value:  expr.    (103)

	.  reduce 103 (src line 951)


state 164
	assign_stmt:  var NEW_ASSIGN assign_value.    (96)

	.  reduce 96 (src line 887)


165: shift/reduce conflict (shift 121(0), red'n 97(0)) on OPEN_BRACKET
state 165
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	multi_assign_stmt:  var_list ASSIGN function_call.    (97)

	OPEN_BRACKET  shift 121
	COLON  shift 122
	.  reduce 97 (src line 899)


166: shift/reduce conflict (shift 121(0), red'n 98(0)) on OPEN_BRACKET
state 166
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	multi_assign_stmt:  var_list NEW_ASSIGN function_call.    (98)

	OPEN_BRACKET  shift 121
	COLON  shift 122
	.  reduce 98 (src line 909)


state 167
	var_list:  var_list ARG_SPLITTER var.    (99)

	.  reduce 99 (src line 921)


state 168
	var:  variable.    (111)

	.  reduce 111 (src line 1033)


state 169
	variable:  IDENTIFIER.    (112)
	variable:  IDENTIFIER.OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET 

	OPEN_SQUARE_BRACKET  shift 137
	.  reduce 112 (src line 1041)


state 170
	variable:  IDENTIFIER_DOT.    (115)

	.  reduce 115 (src line 1066)


state 171
	expr:  OPEN_BRACKET expr CLOSE_BRACKET.    (116)

	.  reduce 116 (src line 1076)


state 172
	math_expr:  OPEN_BRACKET math_expr CLOSE_BRACKET.    (119)

	.  reduce 119 (src line 1096)


state 173
	function_call:  function_call OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 217
	CLOSE_BRACKET  shift 216
	.  error


state 174
	function_call_arguments:  arg_expr.    (36)

	.  reduce 36 (src line 359)


state 175
	arg_expr:  expr_value.    (37)
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 143
	PLUS  shift 139
	MINUS  shift 140
	DIVIDE  shift 142
	MULTIPLY  shift 141
	STRING_CAT  shift 144
	.  reduce 37 (src line 369)


state 176
	expr_value:  math_expr.    (126)

	.  reduce 126 (src line 1164)


177: shift/reduce conflict (shift 121(0), red'n 128(0)) on OPEN_BRACKET
state 177
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr_value:  function_call.    (128)

	OPEN_BRACKET  shift 121
	COLON  shift 122
	.  reduce 128 (src line 1176)


state 178
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	expr_value  goto 90
	math_expr  goto 218

state 179
	function_call:  function_call COLON IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	OPEN_BRACKET  shift 219
	.  error


state 180
	function_call:  variable COLON IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	OPEN_BRACKET  shift 220
	.  error


state 181
	math_assign_stmt:  variable PLUS_ASSIGN assign_value.    (104)

	.  reduce 104 (src line 959)


state 182
	math_assign_stmt:  variable MINUS_ASSIGN assign_value.    (105)

	.  reduce 105 (src line 969)


state 183
	math_assign_stmt:  variable DIVIDE_ASSIGN assign_value.    (106)

	.  reduce 106 (src line 979)


state 184
	math_assign_stmt:  variable MULTIPLY_ASSIGN assign_value.    (107)

	.  reduce 107 (src line 989)


state 185
	math_assign_stmt:  variable DIVIDE_MOD_ASSIGN assign_value.    (108)

	.  reduce 108 (src line 999)


state 186
	for_stmt:  FOR block ARG_SPLITTER.cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER.cmp ARG_SPLITTER block THEN END 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 221
	cmp_value  goto 99
	math_expr  goto 82

state 187
	for_loop_stmt:  FOR var ASSIGN.for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN.for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN END 
	assign_stmt:  var ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 223
	function_call  goto 81
	variable  goto 224
	expr_value  goto 90
	expr  goto 163
	for_loop_value  goto 222
	assign_value  goto 160
	math_expr  goto 82

state 188
	switch_stmt:  SWITCH cmp_value switch_case_list.DEFAULT block END 
	switch_stmt:  SWITCH cmp_value switch_case_list.DEFAULT END 
	switch_case_list:  switch_case_list.switch_case_define 

	CASE  shift 190
	DEFAULT  shift 225
	.  error

	switch_case_define  goto 226

state 189
	switch_case_list:  switch_case_define.    (150)

	.  reduce 150 (src line 1376)


state 190
	switch_case_define:  CASE.cmp_value THEN block 
	switch_case_define:  CASE.cmp_value THEN 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp_value  goto 227
	math_expr  goto 82

state 191
	function_call:  IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 217
	CLOSE_BRACKET  shift 228
	.  error


state 192
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET expr_value.CLOSE_SQUARE_BRACKET 
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 143
	PLUS  shift 139
	MINUS  shift 140
	DIVIDE  shift 142
	MULTIPLY  shift 141
	CLOSE_SQUARE_BRACKET  shift 229
	STRING_CAT  shift 144
	.  error


state 193
	function_call:  IDENTIFIER_DOT OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 217
	CLOSE_BRACKET  shift 230
	.  error


state 194
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value PLUS expr_value.    (120)
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 143
	DIVIDE  shift 142
	MULTIPLY  shift 141
	STRING_CAT  shift 144
	.  reduce 120 (src line 1102)


state 195
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value MINUS expr_value.    (121)
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 143
	DIVIDE  shift 142
	MULTIPLY  shift 141
	STRING_CAT  shift 144
	.  reduce 121 (src line 1112)


state 196
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value MULTIPLY expr_value.    (122)
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 144
	.  reduce 122 (src line 1122)


state 197
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value DIVIDE expr_value.    (123)
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 144
	.  reduce 123 (src line 1132)


state 198
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value DIVIDE_MOD expr_value.    (124)
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 144
	.  reduce 124 (src line 1142)


state 199
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 
	math_expr:  expr_value STRING_CAT expr_value.    (125)

	.  reduce 125 (src line 1152)


state 200
	block:  block.stmt 
	while_stmt:  WHILE cmp THEN block.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 231
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 201
	while_stmt:  WHILE cmp THEN END.    (61)

	.  reduce 61 (src line 564)


202: shift/reduce conflict (shift 146(0), red'n 73(0)) on AND
202: shift/reduce conflict (shift 147(0), red'n 73(0)) on OR
state 202
	cmp:  cmp.AND cmp 
	cmp:  cmp AND cmp.    (73)
	cmp:  cmp.OR cmp 

	AND  shift 146
	OR  shift 147
	.  reduce 73 (src line 679)


203: shift/reduce conflict (shift 146(0), red'n 74(0)) on AND
203: shift/reduce conflict (shift 147(0), red'n 74(0)) on OR
state 203
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 
	cmp:  cmp OR cmp.    (74)

	AND  shift 146
	OR  shift 147
	.  reduce 74 (src line 689)


state 204
	cmp:  OPEN_BRACKET cmp CLOSE_BRACKET.    (72)

	.  reduce 72 (src line 673)


state 205
	cmp:  cmp_value LESS cmp_value.    (75)

	.  reduce 75 (src line 699)


state 206
	cmp:  cmp_value MORE cmp_value.    (76)

	.  reduce 76 (src line 709)


state 207
	cmp:  cmp_value EQUAL cmp_value.    (77)

	.  reduce 77 (src line 719)


state 208
	cmp:  cmp_value MORE_OR_EQUAL cmp_value.    (78)

	.  reduce 78 (src line 729)


state 209
	cmp:  cmp_value LESS_OR_EQUAL cmp_value.    (79)

	.  reduce 79 (src line 739)


state 210
	cmp:  cmp_value NOT_EQUAL cmp_value.    (80)

	.  reduce 80 (src line 749)


211: shift/reduce conflict (shift 214(0), red'n 64(0)) on ELSEIF
state 211
	block:  block.stmt 
	if_stmt:  IF cmp THEN block.elseif_stmt_list else_stmt END 
	elseif_stmt_list: .    (64)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	ELSEIF  shift 214
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 64 (src line 607)

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	elseif_stmt_list  goto 232
	elseif_stmt  goto 213
	var_list  goto 77
	math_expr  goto 82

state 212
	if_stmt:  IF cmp THEN elseif_stmt_list.else_stmt END 
	elseif_stmt_list:  elseif_stmt_list.elseif_stmt 
	else_stmt: .    (69)

	ELSE  shift 235
	ELSEIF  shift 214
	.  reduce 69 (src line 650)

	else_stmt  goto 233
	elseif_stmt  goto 234

state 213
	elseif_stmt_list:  elseif_stmt.    (66)

	.  reduce 66 (src line 620)


state 214
	elseif_stmt:  ELSEIF.cmp THEN block 
	elseif_stmt:  ELSEIF.cmp THEN 

	FTRUE  shift 100
	FFALSE  shift 101
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 98
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	IS  shift 102
	NOT  shift 103
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 104
	function_call  goto 81
	variable  goto 105
	expr_value  goto 90
	expr  goto 106
	cmp  goto 236
	cmp_value  goto 99
	math_expr  goto 82

state 215
	return_value_list:  return_value_list ARG_SPLITTER return_value.    (90)

	.  reduce 90 (src line 839)


state 216
	function_call:  function_call OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (31)

	.  reduce 31 (src line 296)


state 217
	function_call_arguments:  function_call_arguments ARG_SPLITTER.arg_expr 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 177
	variable  goto 120
	arg_expr  goto 237
	expr_value  goto 175
	math_expr  goto 176

state 218
	math_expr:  OPEN_BRACKET math_expr.CLOSE_BRACKET 
	expr_value:  math_expr.    (126)

	CLOSE_BRACKET  shift 172
	.  reduce 126 (src line 1164)


state 219
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 346)

	explicit_value  goto 92
	function_call  goto 177
	function_call_arguments  goto 238
	variable  goto 120
	arg_expr  goto 174
	expr_value  goto 175
	math_expr  goto 176

state 220
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 178
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 346)

	explicit_value  goto 92
	function_call  goto 177
	function_call_arguments  goto 239
	variable  goto 120
	arg_expr  goto 174
	expr_value  goto 175
	math_expr  goto 176

state 221
	for_stmt:  FOR block ARG_SPLITTER cmp.ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp.ARG_SPLITTER block THEN END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	ARG_SPLITTER  shift 240
	AND  shift 146
	OR  shift 147
	.  error


state 222
	for_loop_stmt:  FOR var ASSIGN for_loop_value.RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value.RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN END 

	RIGHT_POINTER  shift 241
	.  error


state 223
	for_loop_value:  explicit_value.    (56)
	assign_value:  explicit_value.    (101)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1170)
	PLUS  reduce 127 (src line 1170)
	MINUS  reduce 127 (src line 1170)
	DIVIDE  reduce 127 (src line 1170)
	MULTIPLY  reduce 127 (src line 1170)
	RIGHT_POINTER  reduce 56 (src line 511)
	STRING_CAT  reduce 127 (src line 1170)
	.  reduce 101 (src line 939)


state 224
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	for_loop_value:  variable.    (57)
	assign_value:  variable.    (102)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1182)
	PLUS  reduce 129 (src line 1182)
	MINUS  reduce 129 (src line 1182)
	DIVIDE  reduce 129 (src line 1182)
	MULTIPLY  reduce 129 (src line 1182)
	COLON  shift 123
	RIGHT_POINTER  reduce 57 (src line 517)
	STRING_CAT  reduce 129 (src line 1182)
	.  reduce 102 (src line 945)


state 225
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT.block END 
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 243
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 242
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 226
	switch_case_list:  switch_case_list switch_case_define.    (151)

	.  reduce 151 (src line 1384)


state 227
	switch_case_define:  CASE cmp_value.THEN block 
	switch_case_define:  CASE cmp_value.THEN 

	THEN  shift 244
	.  error


state 228
	function_call:  IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (29)

	.  reduce 29 (src line 268)


state 229
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET.    (113)

	.  reduce 113 (src line 1049)


state 230
	function_call:  IDENTIFIER_DOT OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (30)

	.  reduce 30 (src line 282)


state 231
	while_stmt:  WHILE cmp THEN block END.    (60)

	.  reduce 60 (src line 555)


state 232
	if_stmt:  IF cmp THEN block elseif_stmt_list.else_stmt END 
	elseif_stmt_list:  elseif_stmt_list.elseif_stmt 
	else_stmt: .    (69)

	ELSE  shift 235
	ELSEIF  shift 214
	.  reduce 69 (src line 650)

	else_stmt  goto 245
	elseif_stmt  goto 234

state 233
	if_stmt:  IF cmp THEN elseif_stmt_list else_stmt.END 

	END  shift 246
	.  error


state 234
	elseif_stmt_list:  elseif_stmt_list elseif_stmt.    (65)

	.  reduce 65 (src line 612)


state 235
	else_stmt:  ELSE.block 
	else_stmt:  ELSE.    (71)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 71 (src line 663)

	explicit_value  goto 92
	block  goto 247
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 236
	elseif_stmt:  ELSEIF cmp.THEN block 
	elseif_stmt:  ELSEIF cmp.THEN 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 248
	AND  shift 146
	OR  shift 147
	.  error


state 237
	function_call_arguments:  function_call_arguments ARG_SPLITTER arg_expr.    (35)

	.  reduce 35 (src line 351)


state 238
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 217
	CLOSE_BRACKET  shift 249
	.  error


state 239
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 217
	CLOSE_BRACKET  shift 250
	.  error


state 240
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER.block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER.block THEN END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 251
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 241
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER.for_loop_value ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER.for_loop_value ARG_SPLITTER for_loop_value THEN END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 169
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 170
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 253
	variable  goto 254
	for_loop_value  goto 252

state 242
	block:  block.stmt 
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT block.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 255
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 243
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT END.    (149)

	.  reduce 149 (src line 1364)


state 244
	switch_case_define:  CASE cmp_value THEN.block 
	switch_case_define:  CASE cmp_value THEN.    (153)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 153 (src line 1403)

	explicit_value  goto 92
	block  goto 256
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 245
	if_stmt:  IF cmp THEN block elseif_stmt_list else_stmt.END 

	END  shift 257
	.  error


state 246
	if_stmt:  IF cmp THEN elseif_stmt_list else_stmt END.    (63)

	.  reduce 63 (src line 590)


state 247
	block:  block.stmt 
	else_stmt:  ELSE block.    (70)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 70 (src line 655)

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 248
	elseif_stmt:  ELSEIF cmp THEN.block 
	elseif_stmt:  ELSEIF cmp THEN.    (68)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 68 (src line 639)

	explicit_value  goto 92
	block  goto 258
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 249
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (32)

	.  reduce 32 (src line 310)


state 250
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (33)

	.  reduce 33 (src line 327)


state 251
	block:  block.stmt 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block.THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block.THEN END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	THEN  shift 259
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 252
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value.ARG_SPLITTER for_loop_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value.ARG_SPLITTER for_loop_value THEN END 

	ARG_SPLITTER  shift 260
	.  error


state 253
	for_loop_value:  explicit_value.    (56)

	.  reduce 56 (src line 511)


state 254
	for_loop_value:  variable.    (57)

	.  reduce 57 (src line 517)


state 255
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT block END.    (148)

	.  reduce 148 (src line 1354)


state 256
	block:  block.stmt 
	switch_case_define:  CASE cmp_value THEN block.    (152)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 152 (src line 1394)

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 257
	if_stmt:  IF cmp THEN block elseif_stmt_list else_stmt END.    (62)

	.  reduce 62 (src line 575)


state 258
	block:  block.stmt 
	elseif_stmt:  ELSEIF cmp THEN block.    (67)

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 67 (src line 630)

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 259
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN.block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 262
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 261
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 260
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER.for_loop_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER.for_loop_value THEN END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 169
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 170
	IDENTIFIER_POINTER  shift 91
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 253
	variable  goto 254
	for_loop_value  goto 263

state 261
	block:  block.stmt 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN block.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 264
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 262
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN END.    (55)

	.  reduce 55 (src line 498)


state 263
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value.THEN block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value.THEN END 

	THEN  shift 265
	.  error


state 264
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN block END.    (54)

	.  reduce 54 (src line 487)


state 265
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN.block END 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 267
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	block  goto 266
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 266
	block:  block.stmt 
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block.END 

	VAR_BEGIN  shift 87
	RETURN  shift 75
	BREAK  shift 78
	WHILE  shift 73
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 74
	END  shift 268
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 88
	NUMBER  shift 35
	OPEN_BRACKET  shift 80
	FKFLOAT  shift 38
	FOR  shift 84
	FAKE  shift 85
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 89
	IDENTIFIER_POINTER  shift 91
	CONTINUE  shift 79
	SWITCH  shift 86
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 92
	function_call  goto 81
	variable  goto 83
	expr_value  goto 90
	stmt  goto 96
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	switch_stmt  goto 72
	var  goto 76
	var_list  goto 77
	math_expr  goto 82

state 267
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN END.    (59)

	.  reduce 59 (src line 539)


state 268
	for_loop_stmt:  FOR var ASSIGN for_loop_value RIGHT_POINTER for_loop_value ARG_SPLITTER for_loop_value THEN block END.    (58)

	.  reduce 58 (src line 525)


69 terminals, 52 nonterminals
154 grammar rules, 269/8000 states
56 shift/reduce, 0 reduce/reduce conflicts reported
101 working sets used
memory: parser 935/120000
210 extra closures
1298 shift entries, 82 exceptions
272 goto entries
539 entries saved by goto default
Optimizer space used: output 1305/120000
1305 table entries, 508 zero
maximum spread: 69, maximum offset: 266
