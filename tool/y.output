
state 0
	$accept: .program $end 
	package_head: .    (2)

	PACKAGE  shift 3
	.  reduce 2 (src line 95)

	program  goto 1
	package_head  goto 2

state 1
	$accept:  program.$end 

	$end  accept
	.  error


2: shift/reduce conflict (shift 6(0), red'n 5(0)) on INCLUDE
state 2
	program:  package_head.include_head struct_head const_head body 
	include_head: .    (5)

	INCLUDE  shift 6
	.  reduce 5 (src line 114)

	include_head  goto 4
	include_define  goto 5

state 3
	package_head:  PACKAGE.IDENTIFIER 
	package_head:  PACKAGE.IDENTIFIER_DOT 

	IDENTIFIER  shift 7
	IDENTIFIER_DOT  shift 8
	.  error


4: shift/reduce conflict (shift 12(0), red'n 9(0)) on STRUCT
state 4
	program:  package_head include_head.struct_head const_head body 
	include_head:  include_head.include_define 
	struct_head: .    (9)

	INCLUDE  shift 6
	STRUCT  shift 12
	.  reduce 9 (src line 133)

	struct_head  goto 9
	include_define  goto 10
	struct_define  goto 11

state 5
	include_head:  include_define.    (6)

	.  reduce 6 (src line 118)


state 6
	include_define:  INCLUDE.STRING_DEFINITION 

	STRING_DEFINITION  shift 13
	.  error


state 7
	package_head:  PACKAGE IDENTIFIER.    (3)

	.  reduce 3 (src line 99)


state 8
	package_head:  PACKAGE IDENTIFIER_DOT.    (4)

	.  reduce 4 (src line 106)


9: shift/reduce conflict (shift 17(0), red'n 16(0)) on FCONST
state 9
	program:  package_head include_head struct_head.const_head body 
	struct_head:  struct_head.struct_define 
	const_head: .    (16)

	FCONST  shift 17
	STRUCT  shift 12
	.  reduce 16 (src line 178)

	const_head  goto 14
	struct_define  goto 15
	const_define  goto 16

state 10
	include_head:  include_head include_define.    (7)

	.  reduce 7 (src line 120)


state 11
	struct_head:  struct_define.    (10)

	.  reduce 10 (src line 137)


state 12
	struct_define:  STRUCT.IDENTIFIER struct_mem_declaration END 

	IDENTIFIER  shift 18
	.  error


state 13
	include_define:  INCLUDE STRING_DEFINITION.    (8)

	.  reduce 8 (src line 124)


14: shift/reduce conflict (shift 22(0), red'n 20(0)) on FUNC
state 14
	program:  package_head include_head struct_head const_head.body 
	const_head:  const_head.const_define 
	body: .    (20)

	FUNC  shift 22
	FCONST  shift 17
	.  reduce 20 (src line 197)

	body  goto 19
	const_define  goto 20
	function_declaration  goto 21

state 15
	struct_head:  struct_head struct_define.    (11)

	.  reduce 11 (src line 139)


state 16
	const_head:  const_define.    (17)

	.  reduce 17 (src line 182)


state 17
	const_define:  FCONST.IDENTIFIER ASSIGN explicit_value 

	IDENTIFIER  shift 23
	.  error


18: shift/reduce conflict (shift 25(0), red'n 13(0)) on IDENTIFIER
state 18
	struct_define:  STRUCT IDENTIFIER.struct_mem_declaration END 
	struct_mem_declaration: .    (13)

	IDENTIFIER  shift 25
	.  reduce 13 (src line 155)

	struct_mem_declaration  goto 24

state 19
	program:  package_head include_head struct_head const_head body.    (1)
	body:  body.function_declaration 

	FUNC  shift 22
	.  reduce 1 (src line 88)

	function_declaration  goto 26

state 20
	const_head:  const_head const_define.    (18)

	.  reduce 18 (src line 184)


state 21
	body:  function_declaration.    (21)

	.  reduce 21 (src line 201)


state 22
	function_declaration:  FUNC.IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC.IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END 

	IDENTIFIER  shift 27
	.  error


state 23
	const_define:  FCONST IDENTIFIER.ASSIGN explicit_value 

	ASSIGN  shift 28
	.  error


state 24
	struct_define:  STRUCT IDENTIFIER struct_mem_declaration.END 
	struct_mem_declaration:  struct_mem_declaration.IDENTIFIER 

	END  shift 29
	IDENTIFIER  shift 30
	.  error


state 25
	struct_mem_declaration:  IDENTIFIER.    (15)

	.  reduce 15 (src line 168)


state 26
	body:  body function_declaration.    (22)

	.  reduce 22 (src line 203)


state 27
	function_declaration:  FUNC IDENTIFIER.OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER.OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END 

	OPEN_BRACKET  shift 31
	.  error


state 28
	const_define:  FCONST IDENTIFIER ASSIGN.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 32

state 29
	struct_define:  STRUCT IDENTIFIER struct_mem_declaration END.    (12)

	.  reduce 12 (src line 143)


state 30
	struct_mem_declaration:  struct_mem_declaration IDENTIFIER.    (14)

	.  reduce 14 (src line 160)


state 31
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET.function_declaration_arguments CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET.function_declaration_arguments CLOSE_BRACKET END 
	function_declaration_arguments: .    (25)

	IDENTIFIER  shift 44
	.  reduce 25 (src line 233)

	function_declaration_arguments  goto 42
	arg  goto 43

state 32
	const_define:  FCONST IDENTIFIER ASSIGN explicit_value.    (19)

	.  reduce 19 (src line 188)


state 33
	explicit_value:  FTRUE.    (130)

	.  reduce 130 (src line 1213)


state 34
	explicit_value:  FFALSE.    (131)

	.  reduce 131 (src line 1222)


state 35
	explicit_value:  NUMBER.    (132)

	.  reduce 132 (src line 1231)


state 36
	explicit_value:  FKUUID.    (133)

	.  reduce 133 (src line 1240)


state 37
	explicit_value:  STRING_DEFINITION.    (134)

	.  reduce 134 (src line 1249)


state 38
	explicit_value:  FKFLOAT.    (135)

	.  reduce 135 (src line 1258)


state 39
	explicit_value:  FNULL.    (136)

	.  reduce 136 (src line 1267)


40: shift/reduce conflict (shift 33(0), red'n 139(0)) on FTRUE
40: shift/reduce conflict (shift 34(0), red'n 139(0)) on FFALSE
40: shift/reduce conflict (shift 37(0), red'n 139(0)) on STRING_DEFINITION
40: shift/reduce conflict (shift 35(0), red'n 139(0)) on NUMBER
40: shift/reduce conflict (shift 38(0), red'n 139(0)) on FKFLOAT
40: shift/reduce conflict (shift 36(0), red'n 139(0)) on FKUUID
40: shift/reduce conflict (shift 41(0), red'n 139(0)) on OPEN_SQUARE_BRACKET
40: shift/reduce conflict (shift 40(0), red'n 139(0)) on OPEN_BIG_BRACKET
40: shift/reduce conflict (shift 39(0), red'n 139(0)) on FNULL
state 40
	explicit_value:  OPEN_BIG_BRACKET.const_map_list_value CLOSE_BIG_BRACKET 
	const_map_list_value: .    (139)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 139 (src line 1298)

	explicit_value  goto 47
	const_map_list_value  goto 45
	const_map_value  goto 46

41: shift/reduce conflict (shift 33(0), red'n 143(0)) on FTRUE
41: shift/reduce conflict (shift 34(0), red'n 143(0)) on FFALSE
41: shift/reduce conflict (shift 37(0), red'n 143(0)) on STRING_DEFINITION
41: shift/reduce conflict (shift 35(0), red'n 143(0)) on NUMBER
41: shift/reduce conflict (shift 38(0), red'n 143(0)) on FKFLOAT
41: shift/reduce conflict (shift 36(0), red'n 143(0)) on FKUUID
41: shift/reduce conflict (shift 41(0), red'n 143(0)) on OPEN_SQUARE_BRACKET
41: shift/reduce conflict (shift 40(0), red'n 143(0)) on OPEN_BIG_BRACKET
41: shift/reduce conflict (shift 39(0), red'n 143(0)) on FNULL
state 41
	explicit_value:  OPEN_SQUARE_BRACKET.const_array_list_value CLOSE_SQUARE_BRACKET 
	const_array_list_value: .    (143)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 143 (src line 1335)

	explicit_value  goto 49
	const_array_list_value  goto 48

state 42
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments.CLOSE_BRACKET block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments.CLOSE_BRACKET END 
	function_declaration_arguments:  function_declaration_arguments.ARG_SPLITTER arg 

	ARG_SPLITTER  shift 51
	CLOSE_BRACKET  shift 50
	.  error


state 43
	function_declaration_arguments:  arg.    (27)

	.  reduce 27 (src line 246)


state 44
	arg:  IDENTIFIER.    (28)

	.  reduce 28 (src line 256)


state 45
	explicit_value:  OPEN_BIG_BRACKET const_map_list_value.CLOSE_BIG_BRACKET 
	const_map_list_value:  const_map_list_value.const_map_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	CLOSE_BIG_BRACKET  shift 52
	FNULL  shift 39
	.  error

	explicit_value  goto 47
	const_map_value  goto 53

state 46
	const_map_list_value:  const_map_value.    (140)

	.  reduce 140 (src line 1305)


state 47
	const_map_value:  explicit_value.COLON explicit_value 

	COLON  shift 54
	.  error


state 48
	explicit_value:  OPEN_SQUARE_BRACKET const_array_list_value.CLOSE_SQUARE_BRACKET 
	const_array_list_value:  const_array_list_value.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	CLOSE_SQUARE_BRACKET  shift 55
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 56

state 49
	const_array_list_value:  explicit_value.    (144)

	.  reduce 144 (src line 1342)


state 50
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET.block END 
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 58
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 57
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 51
	function_declaration_arguments:  function_declaration_arguments ARG_SPLITTER.arg 

	IDENTIFIER  shift 44
	.  error

	arg  goto 97

state 52
	explicit_value:  OPEN_BIG_BRACKET const_map_list_value CLOSE_BIG_BRACKET.    (137)

	.  reduce 137 (src line 1276)


state 53
	const_map_list_value:  const_map_list_value const_map_value.    (141)

	.  reduce 141 (src line 1313)


state 54
	const_map_value:  explicit_value COLON.explicit_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	NUMBER  shift 35
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 98

state 55
	explicit_value:  OPEN_SQUARE_BRACKET const_array_list_value CLOSE_SQUARE_BRACKET.    (138)

	.  reduce 138 (src line 1286)


state 56
	const_array_list_value:  const_array_list_value explicit_value.    (145)

	.  reduce 145 (src line 1350)


state 57
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block.END 
	block:  block.stmt 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 99
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 58
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET END.    (24)

	.  reduce 24 (src line 220)


state 59
	block:  stmt.    (39)

	.  reduce 39 (src line 379)


state 60
	stmt:  while_stmt.    (40)

	.  reduce 40 (src line 389)


state 61
	stmt:  if_stmt.    (41)

	.  reduce 41 (src line 395)


state 62
	stmt:  return_stmt.    (42)

	.  reduce 42 (src line 401)


state 63
	stmt:  assign_stmt.    (43)

	.  reduce 43 (src line 407)


state 64
	stmt:  multi_assign_stmt.    (44)

	.  reduce 44 (src line 413)


state 65
	stmt:  break.    (45)

	.  reduce 45 (src line 419)


state 66
	stmt:  continue.    (46)

	.  reduce 46 (src line 425)


state 67
	stmt:  expr.    (47)

	.  reduce 47 (src line 431)


state 68
	stmt:  math_assign_stmt.    (48)

	.  reduce 48 (src line 437)


state 69
	stmt:  for_stmt.    (49)

	.  reduce 49 (src line 443)


state 70
	stmt:  for_loop_stmt.    (50)

	.  reduce 50 (src line 449)


state 71
	stmt:  fake_call_stmt.    (51)

	.  reduce 51 (src line 455)


state 72
	stmt:  sleep.    (52)

	.  reduce 52 (src line 461)


state 73
	stmt:  yield.    (53)

	.  reduce 53 (src line 467)


state 74
	stmt:  switch_stmt.    (54)

	.  reduce 54 (src line 473)


state 75
	while_stmt:  WHILE.cmp THEN block END 
	while_stmt:  WHILE.cmp THEN END 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 101
	cmp_value  goto 103
	math_expr  goto 84

state 76
	if_stmt:  IF.cmp THEN block elseif_stmt_list else_stmt END 
	if_stmt:  IF.cmp THEN elseif_stmt_list else_stmt END 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 111
	cmp_value  goto 103
	math_expr  goto 84

77: shift/reduce conflict (shift 33(0), red'n 89(0)) on FTRUE
77: shift/reduce conflict (shift 34(0), red'n 89(0)) on FFALSE
77: shift/reduce conflict (shift 37(0), red'n 89(0)) on STRING_DEFINITION
77: shift/reduce conflict (shift 92(0), red'n 89(0)) on IDENTIFIER
77: shift/reduce conflict (shift 35(0), red'n 89(0)) on NUMBER
77: shift/reduce conflict (shift 82(0), red'n 89(0)) on OPEN_BRACKET
77: shift/reduce conflict (shift 38(0), red'n 89(0)) on FKFLOAT
77: shift/reduce conflict (shift 36(0), red'n 89(0)) on FKUUID
77: shift/reduce conflict (shift 41(0), red'n 89(0)) on OPEN_SQUARE_BRACKET
77: shift/reduce conflict (shift 93(0), red'n 89(0)) on IDENTIFIER_DOT
77: shift/reduce conflict (shift 95(0), red'n 89(0)) on IDENTIFIER_POINTER
77: shift/reduce conflict (shift 40(0), red'n 89(0)) on OPEN_BIG_BRACKET
77: shift/reduce conflict (shift 39(0), red'n 89(0)) on FNULL
state 77
	return_stmt:  RETURN.return_value_list 
	return_stmt:  RETURN.    (89)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 89 (src line 852)

	explicit_value  goto 114
	function_call  goto 83
	variable  goto 115
	expr_value  goto 94
	expr  goto 116
	return_value_list  goto 112
	return_value  goto 113
	math_expr  goto 84

78: shift/reduce conflict (shift 117(0), red'n 100(0)) on ASSIGN
78: shift/reduce conflict (shift 118(0), red'n 100(0)) on NEW_ASSIGN
state 78
	assign_stmt:  var.ASSIGN assign_value 
	assign_stmt:  var.NEW_ASSIGN assign_value 
	var_list:  var.    (100)

	ASSIGN  shift 117
	NEW_ASSIGN  shift 118
	.  reduce 100 (src line 952)


state 79
	multi_assign_stmt:  var_list.ASSIGN function_call 
	multi_assign_stmt:  var_list.NEW_ASSIGN function_call 
	var_list:  var_list.ARG_SPLITTER var 

	ARG_SPLITTER  shift 121
	ASSIGN  shift 119
	NEW_ASSIGN  shift 120
	.  error


state 80
	break:  BREAK.    (146)

	.  reduce 146 (src line 1361)


state 81
	continue:  CONTINUE.    (147)

	.  reduce 147 (src line 1370)


state 82
	expr:  OPEN_BRACKET.expr CLOSE_BRACKET 
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 124
	expr_value  goto 94
	expr  goto 122
	math_expr  goto 123

83: shift/reduce conflict (shift 125(0), red'n 117(0)) on OPEN_BRACKET
state 83
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr:  function_call.    (117)
	expr_value:  function_call.    (128)

	DIVIDE_MOD  reduce 128 (src line 1199)
	PLUS  reduce 128 (src line 1199)
	MINUS  reduce 128 (src line 1199)
	DIVIDE  reduce 128 (src line 1199)
	MULTIPLY  reduce 128 (src line 1199)
	OPEN_BRACKET  shift 125
	COLON  shift 126
	STRING_CAT  reduce 128 (src line 1199)
	.  reduce 117 (src line 1105)


state 84
	expr:  math_expr.    (118)
	expr_value:  math_expr.    (126)

	DIVIDE_MOD  reduce 126 (src line 1187)
	PLUS  reduce 126 (src line 1187)
	MINUS  reduce 126 (src line 1187)
	DIVIDE  reduce 126 (src line 1187)
	MULTIPLY  reduce 126 (src line 1187)
	STRING_CAT  reduce 126 (src line 1187)
	.  reduce 118 (src line 1111)


state 85
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	math_assign_stmt:  variable.PLUS_ASSIGN assign_value 
	math_assign_stmt:  variable.MINUS_ASSIGN assign_value 
	math_assign_stmt:  variable.DIVIDE_ASSIGN assign_value 
	math_assign_stmt:  variable.MULTIPLY_ASSIGN assign_value 
	math_assign_stmt:  variable.DIVIDE_MOD_ASSIGN assign_value 
	math_assign_stmt:  variable.INC 
	var:  variable.    (111)
	expr_value:  variable.    (129)

	ARG_SPLITTER  reduce 111 (src line 1056)
	ASSIGN  reduce 111 (src line 1056)
	PLUS_ASSIGN  shift 128
	MINUS_ASSIGN  shift 129
	DIVIDE_ASSIGN  shift 130
	MULTIPLY_ASSIGN  shift 131
	DIVIDE_MOD_ASSIGN  shift 132
	COLON  shift 127
	INC  shift 133
	NEW_ASSIGN  reduce 111 (src line 1056)
	.  reduce 129 (src line 1205)


state 86
	for_stmt:  FOR.block ARG_SPLITTER cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR.block ARG_SPLITTER cmp ARG_SPLITTER block THEN END 
	for_loop_stmt:  FOR.var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR.var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 134
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 135
	var_list  goto 79
	math_expr  goto 84

state 87
	fake_call_stmt:  FAKE.function_call 

	IDENTIFIER  shift 92
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	.  error

	function_call  goto 136
	variable  goto 137

state 88
	sleep:  SLEEP.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 138
	math_expr  goto 139

state 89
	yield:  YIELD.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 142
	math_expr  goto 139

state 90
	switch_stmt:  SWITCH.cmp_value switch_case_list DEFAULT block END 
	switch_stmt:  SWITCH.cmp_value switch_case_list DEFAULT END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 143
	math_expr  goto 84

state 91
	var:  VAR_BEGIN.IDENTIFIER 

	IDENTIFIER  shift 144
	.  error


92: shift/reduce conflict (shift 145(0), red'n 112(0)) on OPEN_BRACKET
92: shift/reduce conflict (shift 146(0), red'n 112(0)) on OPEN_SQUARE_BRACKET
state 92
	function_call:  IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	variable:  IDENTIFIER.    (112)
	variable:  IDENTIFIER.OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET 

	OPEN_BRACKET  shift 145
	OPEN_SQUARE_BRACKET  shift 146
	.  reduce 112 (src line 1064)


93: shift/reduce conflict (shift 147(0), red'n 115(0)) on OPEN_BRACKET
state 93
	function_call:  IDENTIFIER_DOT.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	variable:  IDENTIFIER_DOT.    (115)

	OPEN_BRACKET  shift 147
	.  reduce 115 (src line 1089)


state 94
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  error


state 95
	variable:  IDENTIFIER_POINTER.    (114)

	.  reduce 114 (src line 1081)


state 96
	expr_value:  explicit_value.    (127)

	.  reduce 127 (src line 1193)


state 97
	function_declaration_arguments:  function_declaration_arguments ARG_SPLITTER arg.    (26)

	.  reduce 26 (src line 238)


state 98
	const_map_value:  explicit_value COLON explicit_value.    (142)

	.  reduce 142 (src line 1324)


state 99
	function_declaration:  FUNC IDENTIFIER OPEN_BRACKET function_declaration_arguments CLOSE_BRACKET block END.    (23)

	.  reduce 23 (src line 209)


state 100
	block:  block stmt.    (38)

	.  reduce 38 (src line 371)


state 101
	while_stmt:  WHILE cmp.THEN block END 
	while_stmt:  WHILE cmp.THEN END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 154
	AND  shift 155
	OR  shift 156
	.  error


state 102
	cmp:  OPEN_BRACKET.cmp CLOSE_BRACKET 
	expr:  OPEN_BRACKET.expr CLOSE_BRACKET 
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 158
	cmp  goto 157
	cmp_value  goto 103
	math_expr  goto 123

state 103
	cmp:  cmp_value.LESS cmp_value 
	cmp:  cmp_value.MORE cmp_value 
	cmp:  cmp_value.EQUAL cmp_value 
	cmp:  cmp_value.MORE_OR_EQUAL cmp_value 
	cmp:  cmp_value.LESS_OR_EQUAL cmp_value 
	cmp:  cmp_value.NOT_EQUAL cmp_value 

	MORE  shift 160
	LESS  shift 159
	MORE_OR_EQUAL  shift 162
	LESS_OR_EQUAL  shift 163
	EQUAL  shift 161
	NOT_EQUAL  shift 164
	.  error


state 104
	cmp:  FTRUE.    (81)
	explicit_value:  FTRUE.    (130)

	THEN  reduce 81 (src line 782)
	ARG_SPLITTER  reduce 81 (src line 782)
	CLOSE_BRACKET  reduce 81 (src line 782)
	AND  reduce 81 (src line 782)
	OR  reduce 81 (src line 782)
	.  reduce 130 (src line 1213)


state 105
	cmp:  FFALSE.    (82)
	explicit_value:  FFALSE.    (131)

	THEN  reduce 82 (src line 792)
	ARG_SPLITTER  reduce 82 (src line 792)
	CLOSE_BRACKET  reduce 82 (src line 792)
	AND  reduce 82 (src line 792)
	OR  reduce 82 (src line 792)
	.  reduce 131 (src line 1222)


state 106
	cmp:  IS.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 165
	math_expr  goto 84

state 107
	cmp:  NOT.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 166
	math_expr  goto 84

state 108
	cmp_value:  explicit_value.    (85)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1193)
	PLUS  reduce 127 (src line 1193)
	MINUS  reduce 127 (src line 1193)
	DIVIDE  reduce 127 (src line 1193)
	MULTIPLY  reduce 127 (src line 1193)
	STRING_CAT  reduce 127 (src line 1193)
	.  reduce 85 (src line 824)


state 109
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	cmp_value:  variable.    (86)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1205)
	PLUS  reduce 129 (src line 1205)
	MINUS  reduce 129 (src line 1205)
	DIVIDE  reduce 129 (src line 1205)
	MULTIPLY  reduce 129 (src line 1205)
	COLON  shift 127
	STRING_CAT  reduce 129 (src line 1205)
	.  reduce 86 (src line 830)


state 110
	cmp_value:  expr.    (87)

	.  reduce 87 (src line 836)


state 111
	if_stmt:  IF cmp.THEN block elseif_stmt_list else_stmt END 
	if_stmt:  IF cmp.THEN elseif_stmt_list else_stmt END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 167
	AND  shift 155
	OR  shift 156
	.  error


112: shift/reduce conflict (shift 168(0), red'n 88(0)) on ARG_SPLITTER
state 112
	return_stmt:  RETURN return_value_list.    (88)
	return_value_list:  return_value_list.ARG_SPLITTER return_value 

	ARG_SPLITTER  shift 168
	.  reduce 88 (src line 844)


state 113
	return_value_list:  return_value.    (91)

	.  reduce 91 (src line 870)


state 114
	return_value:  explicit_value.    (92)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1193)
	PLUS  reduce 127 (src line 1193)
	MINUS  reduce 127 (src line 1193)
	DIVIDE  reduce 127 (src line 1193)
	MULTIPLY  reduce 127 (src line 1193)
	STRING_CAT  reduce 127 (src line 1193)
	.  reduce 92 (src line 880)


state 115
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	return_value:  variable.    (93)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1205)
	PLUS  reduce 129 (src line 1205)
	MINUS  reduce 129 (src line 1205)
	DIVIDE  reduce 129 (src line 1205)
	MULTIPLY  reduce 129 (src line 1205)
	COLON  shift 127
	STRING_CAT  reduce 129 (src line 1205)
	.  reduce 93 (src line 886)


state 116
	return_value:  expr.    (94)

	.  reduce 94 (src line 892)


state 117
	assign_stmt:  var ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 169
	math_expr  goto 84

state 118
	assign_stmt:  var NEW_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 173
	math_expr  goto 84

state 119
	multi_assign_stmt:  var_list ASSIGN.function_call 

	IDENTIFIER  shift 92
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	.  error

	function_call  goto 174
	variable  goto 137

state 120
	multi_assign_stmt:  var_list NEW_ASSIGN.function_call 

	IDENTIFIER  shift 92
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	.  error

	function_call  goto 175
	variable  goto 137

state 121
	var_list:  var_list ARG_SPLITTER.var 

	VAR_BEGIN  shift 91
	IDENTIFIER  shift 178
	IDENTIFIER_DOT  shift 179
	IDENTIFIER_POINTER  shift 95
	.  error

	variable  goto 177
	var  goto 176

state 122
	expr:  OPEN_BRACKET expr.CLOSE_BRACKET 

	CLOSE_BRACKET  shift 180
	.  error


123: shift/reduce conflict (shift 181(0), red'n 118(0)) on CLOSE_BRACKET
state 123
	expr:  math_expr.    (118)
	math_expr:  OPEN_BRACKET math_expr.CLOSE_BRACKET 
	expr_value:  math_expr.    (126)

	MORE  reduce 118 (src line 1111)
	LESS  reduce 118 (src line 1111)
	MORE_OR_EQUAL  reduce 118 (src line 1111)
	LESS_OR_EQUAL  reduce 118 (src line 1111)
	EQUAL  reduce 118 (src line 1111)
	NOT_EQUAL  reduce 118 (src line 1111)
	CLOSE_BRACKET  shift 181
	.  reduce 126 (src line 1187)


state 124
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr_value:  variable.    (129)

	COLON  shift 127
	.  reduce 129 (src line 1205)


state 125
	function_call:  function_call OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 338)

	explicit_value  goto 96
	function_call  goto 140
	function_call_arguments  goto 182
	variable  goto 124
	arg_expr  goto 183
	expr_value  goto 184
	math_expr  goto 139

state 126
	function_call:  function_call COLON.IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	IDENTIFIER  shift 185
	.  error


state 127
	function_call:  variable COLON.IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	IDENTIFIER  shift 186
	.  error


state 128
	math_assign_stmt:  variable PLUS_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 187
	math_expr  goto 84

state 129
	math_assign_stmt:  variable MINUS_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 188
	math_expr  goto 84

state 130
	math_assign_stmt:  variable DIVIDE_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 189
	math_expr  goto 84

state 131
	math_assign_stmt:  variable MULTIPLY_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 190
	math_expr  goto 84

state 132
	math_assign_stmt:  variable DIVIDE_MOD_ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 191
	math_expr  goto 84

state 133
	math_assign_stmt:  variable INC.    (109)

	.  reduce 109 (src line 1032)


state 134
	block:  block.stmt 
	for_stmt:  FOR block.ARG_SPLITTER cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block.ARG_SPLITTER cmp ARG_SPLITTER block THEN END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	ARG_SPLITTER  shift 192
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

135: shift/reduce conflict (shift 193(0), red'n 100(0)) on ASSIGN
135: shift/reduce conflict (shift 118(0), red'n 100(0)) on NEW_ASSIGN
state 135
	for_loop_stmt:  FOR var.ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR var.ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN END 
	assign_stmt:  var.ASSIGN assign_value 
	assign_stmt:  var.NEW_ASSIGN assign_value 
	var_list:  var.    (100)

	ASSIGN  shift 193
	NEW_ASSIGN  shift 118
	.  reduce 100 (src line 952)


136: shift/reduce conflict (shift 125(0), red'n 55(0)) on OPEN_BRACKET
state 136
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	fake_call_stmt:  FAKE function_call.    (55)

	OPEN_BRACKET  shift 125
	COLON  shift 126
	.  reduce 55 (src line 481)


state 137
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	COLON  shift 127
	.  error


state 138
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 
	sleep:  SLEEP expr_value.    (148)

	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  reduce 148 (src line 1379)


state 139
	expr_value:  math_expr.    (126)

	.  reduce 126 (src line 1187)


140: shift/reduce conflict (shift 125(0), red'n 128(0)) on OPEN_BRACKET
state 140
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	expr_value:  function_call.    (128)

	OPEN_BRACKET  shift 125
	COLON  shift 126
	.  reduce 128 (src line 1199)


state 141
	math_expr:  OPEN_BRACKET.math_expr CLOSE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 94
	math_expr  goto 194

state 142
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 
	yield:  YIELD expr_value.    (149)

	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  reduce 149 (src line 1388)


state 143
	switch_stmt:  SWITCH cmp_value.switch_case_list DEFAULT block END 
	switch_stmt:  SWITCH cmp_value.switch_case_list DEFAULT END 

	CASE  shift 197
	.  error

	switch_case_list  goto 195
	switch_case_define  goto 196

state 144
	var:  VAR_BEGIN IDENTIFIER.    (110)

	.  reduce 110 (src line 1048)


state 145
	function_call:  IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 338)

	explicit_value  goto 96
	function_call  goto 140
	function_call_arguments  goto 198
	variable  goto 124
	arg_expr  goto 183
	expr_value  goto 184
	math_expr  goto 139

state 146
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET.expr_value CLOSE_SQUARE_BRACKET 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 199
	math_expr  goto 139

state 147
	function_call:  IDENTIFIER_DOT OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 338)

	explicit_value  goto 96
	function_call  goto 140
	function_call_arguments  goto 200
	variable  goto 124
	arg_expr  goto 183
	expr_value  goto 184
	math_expr  goto 139

state 148
	math_expr:  expr_value PLUS.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 201
	math_expr  goto 139

state 149
	math_expr:  expr_value MINUS.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 202
	math_expr  goto 139

state 150
	math_expr:  expr_value MULTIPLY.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 203
	math_expr  goto 139

state 151
	math_expr:  expr_value DIVIDE.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 204
	math_expr  goto 139

state 152
	math_expr:  expr_value DIVIDE_MOD.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 205
	math_expr  goto 139

state 153
	math_expr:  expr_value STRING_CAT.expr_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 206
	math_expr  goto 139

state 154
	while_stmt:  WHILE cmp THEN.block END 
	while_stmt:  WHILE cmp THEN.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 208
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 207
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 155
	cmp:  cmp AND.cmp 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 209
	cmp_value  goto 103
	math_expr  goto 84

state 156
	cmp:  cmp OR.cmp 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 210
	cmp_value  goto 103
	math_expr  goto 84

state 157
	cmp:  OPEN_BRACKET cmp.CLOSE_BRACKET 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	CLOSE_BRACKET  shift 211
	AND  shift 155
	OR  shift 156
	.  error


state 158
	cmp_value:  expr.    (87)
	expr:  OPEN_BRACKET expr.CLOSE_BRACKET 

	CLOSE_BRACKET  shift 180
	.  reduce 87 (src line 836)


state 159
	cmp:  cmp_value LESS.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 212
	math_expr  goto 84

state 160
	cmp:  cmp_value MORE.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 213
	math_expr  goto 84

state 161
	cmp:  cmp_value EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 214
	math_expr  goto 84

state 162
	cmp:  cmp_value MORE_OR_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 215
	math_expr  goto 84

state 163
	cmp:  cmp_value LESS_OR_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 216
	math_expr  goto 84

state 164
	cmp:  cmp_value NOT_EQUAL.cmp_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 217
	math_expr  goto 84

state 165
	cmp:  IS cmp_value.    (83)

	.  reduce 83 (src line 802)


state 166
	cmp:  NOT cmp_value.    (84)

	.  reduce 84 (src line 812)


167: shift/reduce conflict (shift 221(0), red'n 64(0)) on ELSEIF
state 167
	if_stmt:  IF cmp THEN.block elseif_stmt_list else_stmt END 
	if_stmt:  IF cmp THEN.elseif_stmt_list else_stmt END 
	elseif_stmt_list: .    (64)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	ELSEIF  shift 221
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 64 (src line 630)

	explicit_value  goto 96
	block  goto 218
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	elseif_stmt_list  goto 219
	elseif_stmt  goto 220
	var_list  goto 79
	math_expr  goto 84

state 168
	return_value_list:  return_value_list ARG_SPLITTER.return_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 114
	function_call  goto 83
	variable  goto 115
	expr_value  goto 94
	expr  goto 116
	return_value  goto 222
	math_expr  goto 84

state 169
	assign_stmt:  var ASSIGN assign_value.    (95)

	.  reduce 95 (src line 900)


state 170
	assign_value:  explicit_value.    (101)
	expr_value:  explicit_value.    (127)

	DIVIDE_MOD  reduce 127 (src line 1193)
	PLUS  reduce 127 (src line 1193)
	MINUS  reduce 127 (src line 1193)
	DIVIDE  reduce 127 (src line 1193)
	MULTIPLY  reduce 127 (src line 1193)
	STRING_CAT  reduce 127 (src line 1193)
	.  reduce 101 (src line 962)


state 171
	function_call:  variable.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	assign_value:  variable.    (102)
	expr_value:  variable.    (129)

	DIVIDE_MOD  reduce 129 (src line 1205)
	PLUS  reduce 129 (src line 1205)
	MINUS  reduce 129 (src line 1205)
	DIVIDE  reduce 129 (src line 1205)
	MULTIPLY  reduce 129 (src line 1205)
	COLON  shift 127
	STRING_CAT  reduce 129 (src line 1205)
	.  reduce 102 (src line 968)


state 172
	assign_value:  expr.    (103)

	.  reduce 103 (src line 974)


state 173
	assign_stmt:  var NEW_ASSIGN assign_value.    (96)

	.  reduce 96 (src line 910)


174: shift/reduce conflict (shift 125(0), red'n 97(0)) on OPEN_BRACKET
state 174
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	multi_assign_stmt:  var_list ASSIGN function_call.    (97)

	OPEN_BRACKET  shift 125
	COLON  shift 126
	.  reduce 97 (src line 922)


175: shift/reduce conflict (shift 125(0), red'n 98(0)) on OPEN_BRACKET
state 175
	function_call:  function_call.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	function_call:  function_call.COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET 
	multi_assign_stmt:  var_list NEW_ASSIGN function_call.    (98)

	OPEN_BRACKET  shift 125
	COLON  shift 126
	.  reduce 98 (src line 932)


state 176
	var_list:  var_list ARG_SPLITTER var.    (99)

	.  reduce 99 (src line 944)


state 177
	var:  variable.    (111)

	.  reduce 111 (src line 1056)


state 178
	variable:  IDENTIFIER.    (112)
	variable:  IDENTIFIER.OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET 

	OPEN_SQUARE_BRACKET  shift 146
	.  reduce 112 (src line 1064)


state 179
	variable:  IDENTIFIER_DOT.    (115)

	.  reduce 115 (src line 1089)


state 180
	expr:  OPEN_BRACKET expr CLOSE_BRACKET.    (116)

	.  reduce 116 (src line 1099)


state 181
	math_expr:  OPEN_BRACKET math_expr CLOSE_BRACKET.    (119)

	.  reduce 119 (src line 1119)


state 182
	function_call:  function_call OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 224
	CLOSE_BRACKET  shift 223
	.  error


state 183
	function_call_arguments:  arg_expr.    (36)

	.  reduce 36 (src line 351)


state 184
	arg_expr:  expr_value.    (37)
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  reduce 37 (src line 361)


state 185
	function_call:  function_call COLON IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	OPEN_BRACKET  shift 225
	.  error


state 186
	function_call:  variable COLON IDENTIFIER.OPEN_BRACKET function_call_arguments CLOSE_BRACKET 

	OPEN_BRACKET  shift 226
	.  error


state 187
	math_assign_stmt:  variable PLUS_ASSIGN assign_value.    (104)

	.  reduce 104 (src line 982)


state 188
	math_assign_stmt:  variable MINUS_ASSIGN assign_value.    (105)

	.  reduce 105 (src line 992)


state 189
	math_assign_stmt:  variable DIVIDE_ASSIGN assign_value.    (106)

	.  reduce 106 (src line 1002)


state 190
	math_assign_stmt:  variable MULTIPLY_ASSIGN assign_value.    (107)

	.  reduce 107 (src line 1012)


state 191
	math_assign_stmt:  variable DIVIDE_MOD_ASSIGN assign_value.    (108)

	.  reduce 108 (src line 1022)


state 192
	for_stmt:  FOR block ARG_SPLITTER.cmp ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER.cmp ARG_SPLITTER block THEN END 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 227
	cmp_value  goto 103
	math_expr  goto 84

state 193
	for_loop_stmt:  FOR var ASSIGN.assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN.assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN END 
	assign_stmt:  var ASSIGN.assign_value 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 170
	function_call  goto 83
	variable  goto 171
	expr_value  goto 94
	expr  goto 172
	assign_value  goto 228
	math_expr  goto 84

state 194
	math_expr:  OPEN_BRACKET math_expr.CLOSE_BRACKET 
	expr_value:  math_expr.    (126)

	CLOSE_BRACKET  shift 181
	.  reduce 126 (src line 1187)


state 195
	switch_stmt:  SWITCH cmp_value switch_case_list.DEFAULT block END 
	switch_stmt:  SWITCH cmp_value switch_case_list.DEFAULT END 
	switch_case_list:  switch_case_list.switch_case_define 

	CASE  shift 197
	DEFAULT  shift 229
	.  error

	switch_case_define  goto 230

state 196
	switch_case_list:  switch_case_define.    (152)

	.  reduce 152 (src line 1420)


state 197
	switch_case_define:  CASE.cmp_value THEN block 
	switch_case_define:  CASE.cmp_value THEN 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 231
	math_expr  goto 84

state 198
	function_call:  IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 224
	CLOSE_BRACKET  shift 232
	.  error


state 199
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET expr_value.CLOSE_SQUARE_BRACKET 
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	CLOSE_SQUARE_BRACKET  shift 233
	STRING_CAT  shift 153
	.  error


state 200
	function_call:  IDENTIFIER_DOT OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 224
	CLOSE_BRACKET  shift 234
	.  error


state 201
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value PLUS expr_value.    (120)
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 152
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  reduce 120 (src line 1125)


state 202
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value MINUS expr_value.    (121)
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	DIVIDE_MOD  shift 152
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  reduce 121 (src line 1135)


state 203
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value MULTIPLY expr_value.    (122)
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 153
	.  reduce 122 (src line 1145)


state 204
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value DIVIDE expr_value.    (123)
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 153
	.  reduce 123 (src line 1155)


state 205
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value DIVIDE_MOD expr_value.    (124)
	math_expr:  expr_value.STRING_CAT expr_value 

	STRING_CAT  shift 153
	.  reduce 124 (src line 1165)


state 206
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 
	math_expr:  expr_value STRING_CAT expr_value.    (125)

	.  reduce 125 (src line 1175)


state 207
	block:  block.stmt 
	while_stmt:  WHILE cmp THEN block.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 235
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 208
	while_stmt:  WHILE cmp THEN END.    (61)

	.  reduce 61 (src line 595)


209: shift/reduce conflict (shift 155(0), red'n 73(0)) on AND
209: shift/reduce conflict (shift 156(0), red'n 73(0)) on OR
state 209
	cmp:  cmp.AND cmp 
	cmp:  cmp AND cmp.    (73)
	cmp:  cmp.OR cmp 

	AND  shift 155
	OR  shift 156
	.  reduce 73 (src line 702)


210: shift/reduce conflict (shift 155(0), red'n 74(0)) on AND
210: shift/reduce conflict (shift 156(0), red'n 74(0)) on OR
state 210
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 
	cmp:  cmp OR cmp.    (74)

	AND  shift 155
	OR  shift 156
	.  reduce 74 (src line 712)


state 211
	cmp:  OPEN_BRACKET cmp CLOSE_BRACKET.    (72)

	.  reduce 72 (src line 696)


state 212
	cmp:  cmp_value LESS cmp_value.    (75)

	.  reduce 75 (src line 722)


state 213
	cmp:  cmp_value MORE cmp_value.    (76)

	.  reduce 76 (src line 732)


state 214
	cmp:  cmp_value EQUAL cmp_value.    (77)

	.  reduce 77 (src line 742)


state 215
	cmp:  cmp_value MORE_OR_EQUAL cmp_value.    (78)

	.  reduce 78 (src line 752)


state 216
	cmp:  cmp_value LESS_OR_EQUAL cmp_value.    (79)

	.  reduce 79 (src line 762)


state 217
	cmp:  cmp_value NOT_EQUAL cmp_value.    (80)

	.  reduce 80 (src line 772)


218: shift/reduce conflict (shift 221(0), red'n 64(0)) on ELSEIF
state 218
	block:  block.stmt 
	if_stmt:  IF cmp THEN block.elseif_stmt_list else_stmt END 
	elseif_stmt_list: .    (64)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	ELSEIF  shift 221
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 64 (src line 630)

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	elseif_stmt_list  goto 236
	elseif_stmt  goto 220
	var_list  goto 79
	math_expr  goto 84

state 219
	if_stmt:  IF cmp THEN elseif_stmt_list.else_stmt END 
	elseif_stmt_list:  elseif_stmt_list.elseif_stmt 
	else_stmt: .    (69)

	ELSE  shift 239
	ELSEIF  shift 221
	.  reduce 69 (src line 673)

	else_stmt  goto 237
	elseif_stmt  goto 238

state 220
	elseif_stmt_list:  elseif_stmt.    (66)

	.  reduce 66 (src line 643)


state 221
	elseif_stmt:  ELSEIF.cmp THEN block 
	elseif_stmt:  ELSEIF.cmp THEN 

	FTRUE  shift 104
	FFALSE  shift 105
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 102
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	IS  shift 106
	NOT  shift 107
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp  goto 240
	cmp_value  goto 103
	math_expr  goto 84

state 222
	return_value_list:  return_value_list ARG_SPLITTER return_value.    (90)

	.  reduce 90 (src line 862)


state 223
	function_call:  function_call OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (31)

	.  reduce 31 (src line 290)


state 224
	function_call_arguments:  function_call_arguments ARG_SPLITTER.arg_expr 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	arg_expr  goto 241
	expr_value  goto 184
	math_expr  goto 139

state 225
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 338)

	explicit_value  goto 96
	function_call  goto 140
	function_call_arguments  goto 242
	variable  goto 124
	arg_expr  goto 183
	expr_value  goto 184
	math_expr  goto 139

state 226
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET.function_call_arguments CLOSE_BRACKET 
	function_call_arguments: .    (34)

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 34 (src line 338)

	explicit_value  goto 96
	function_call  goto 140
	function_call_arguments  goto 243
	variable  goto 124
	arg_expr  goto 183
	expr_value  goto 184
	math_expr  goto 139

state 227
	for_stmt:  FOR block ARG_SPLITTER cmp.ARG_SPLITTER block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp.ARG_SPLITTER block THEN END 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	ARG_SPLITTER  shift 244
	AND  shift 155
	OR  shift 156
	.  error


state 228
	for_loop_stmt:  FOR var ASSIGN assign_value.RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN assign_value.RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN END 
	assign_stmt:  var ASSIGN assign_value.    (95)

	RIGHT_POINTER  shift 245
	.  reduce 95 (src line 900)


state 229
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT.block END 
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 247
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 246
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 230
	switch_case_list:  switch_case_list switch_case_define.    (153)

	.  reduce 153 (src line 1428)


state 231
	switch_case_define:  CASE cmp_value.THEN block 
	switch_case_define:  CASE cmp_value.THEN 

	THEN  shift 248
	.  error


state 232
	function_call:  IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (29)

	.  reduce 29 (src line 266)


state 233
	variable:  IDENTIFIER OPEN_SQUARE_BRACKET expr_value CLOSE_SQUARE_BRACKET.    (113)

	.  reduce 113 (src line 1072)


state 234
	function_call:  IDENTIFIER_DOT OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (30)

	.  reduce 30 (src line 278)


state 235
	while_stmt:  WHILE cmp THEN block END.    (60)

	.  reduce 60 (src line 586)


state 236
	if_stmt:  IF cmp THEN block elseif_stmt_list.else_stmt END 
	elseif_stmt_list:  elseif_stmt_list.elseif_stmt 
	else_stmt: .    (69)

	ELSE  shift 239
	ELSEIF  shift 221
	.  reduce 69 (src line 673)

	else_stmt  goto 249
	elseif_stmt  goto 238

state 237
	if_stmt:  IF cmp THEN elseif_stmt_list else_stmt.END 

	END  shift 250
	.  error


state 238
	elseif_stmt_list:  elseif_stmt_list elseif_stmt.    (65)

	.  reduce 65 (src line 635)


state 239
	else_stmt:  ELSE.block 
	else_stmt:  ELSE.    (71)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 71 (src line 686)

	explicit_value  goto 96
	block  goto 251
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 240
	elseif_stmt:  ELSEIF cmp.THEN block 
	elseif_stmt:  ELSEIF cmp.THEN 
	cmp:  cmp.AND cmp 
	cmp:  cmp.OR cmp 

	THEN  shift 252
	AND  shift 155
	OR  shift 156
	.  error


state 241
	function_call_arguments:  function_call_arguments ARG_SPLITTER arg_expr.    (35)

	.  reduce 35 (src line 343)


state 242
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 224
	CLOSE_BRACKET  shift 253
	.  error


state 243
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET function_call_arguments.CLOSE_BRACKET 
	function_call_arguments:  function_call_arguments.ARG_SPLITTER arg_expr 

	ARG_SPLITTER  shift 224
	CLOSE_BRACKET  shift 254
	.  error


state 244
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER.block THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER.block THEN END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 255
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 245
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER.cmp_value ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER.cmp_value ARG_SPLITTER expr_value THEN END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 108
	function_call  goto 83
	variable  goto 109
	expr_value  goto 94
	expr  goto 110
	cmp_value  goto 256
	math_expr  goto 84

state 246
	block:  block.stmt 
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT block.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 257
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 247
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT END.    (151)

	.  reduce 151 (src line 1408)


state 248
	switch_case_define:  CASE cmp_value THEN.block 
	switch_case_define:  CASE cmp_value THEN.    (155)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 155 (src line 1448)

	explicit_value  goto 96
	block  goto 258
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 249
	if_stmt:  IF cmp THEN block elseif_stmt_list else_stmt.END 

	END  shift 259
	.  error


state 250
	if_stmt:  IF cmp THEN elseif_stmt_list else_stmt END.    (63)

	.  reduce 63 (src line 617)


state 251
	block:  block.stmt 
	else_stmt:  ELSE block.    (70)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 70 (src line 678)

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 252
	elseif_stmt:  ELSEIF cmp THEN.block 
	elseif_stmt:  ELSEIF cmp THEN.    (68)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 68 (src line 662)

	explicit_value  goto 96
	block  goto 260
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 253
	function_call:  function_call COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (32)

	.  reduce 32 (src line 302)


state 254
	function_call:  variable COLON IDENTIFIER OPEN_BRACKET function_call_arguments CLOSE_BRACKET.    (33)

	.  reduce 33 (src line 319)


state 255
	block:  block.stmt 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block.THEN block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block.THEN END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	THEN  shift 261
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 256
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value.ARG_SPLITTER expr_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value.ARG_SPLITTER expr_value THEN END 

	ARG_SPLITTER  shift 262
	.  error


state 257
	switch_stmt:  SWITCH cmp_value switch_case_list DEFAULT block END.    (150)

	.  reduce 150 (src line 1398)


state 258
	block:  block.stmt 
	switch_case_define:  CASE cmp_value THEN block.    (154)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 154 (src line 1439)

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 259
	if_stmt:  IF cmp THEN block elseif_stmt_list else_stmt END.    (62)

	.  reduce 62 (src line 606)


state 260
	block:  block.stmt 
	elseif_stmt:  ELSEIF cmp THEN block.    (67)

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  reduce 67 (src line 653)

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 261
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN.block END 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 264
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 263
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 262
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER.expr_value THEN block END 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER.expr_value THEN END 

	FTRUE  shift 33
	FFALSE  shift 34
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 141
	FKFLOAT  shift 38
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 140
	variable  goto 124
	expr_value  goto 265
	math_expr  goto 139

state 263
	block:  block.stmt 
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN block.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 266
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 264
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN END.    (57)

	.  reduce 57 (src line 502)


state 265
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value.THEN block END 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value.THEN END 
	math_expr:  expr_value.PLUS expr_value 
	math_expr:  expr_value.MINUS expr_value 
	math_expr:  expr_value.MULTIPLY expr_value 
	math_expr:  expr_value.DIVIDE expr_value 
	math_expr:  expr_value.DIVIDE_MOD expr_value 
	math_expr:  expr_value.STRING_CAT expr_value 

	THEN  shift 267
	DIVIDE_MOD  shift 152
	PLUS  shift 148
	MINUS  shift 149
	DIVIDE  shift 151
	MULTIPLY  shift 150
	STRING_CAT  shift 153
	.  error


state 266
	for_stmt:  FOR block ARG_SPLITTER cmp ARG_SPLITTER block THEN block END.    (56)

	.  reduce 56 (src line 491)


state 267
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN.block END 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 269
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	block  goto 268
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 59
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 268
	block:  block.stmt 
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block.END 

	VAR_BEGIN  shift 91
	RETURN  shift 77
	BREAK  shift 80
	WHILE  shift 75
	FTRUE  shift 33
	FFALSE  shift 34
	IF  shift 76
	END  shift 270
	STRING_DEFINITION  shift 37
	IDENTIFIER  shift 92
	NUMBER  shift 35
	OPEN_BRACKET  shift 82
	FKFLOAT  shift 38
	FOR  shift 86
	FAKE  shift 87
	FKUUID  shift 36
	OPEN_SQUARE_BRACKET  shift 41
	IDENTIFIER_DOT  shift 93
	IDENTIFIER_POINTER  shift 95
	CONTINUE  shift 81
	YIELD  shift 89
	SLEEP  shift 88
	SWITCH  shift 90
	OPEN_BIG_BRACKET  shift 40
	FNULL  shift 39
	.  error

	explicit_value  goto 96
	function_call  goto 83
	variable  goto 85
	expr_value  goto 94
	stmt  goto 100
	while_stmt  goto 60
	if_stmt  goto 61
	return_stmt  goto 62
	assign_stmt  goto 63
	multi_assign_stmt  goto 64
	break  goto 65
	continue  goto 66
	expr  goto 67
	math_assign_stmt  goto 68
	for_stmt  goto 69
	for_loop_stmt  goto 70
	fake_call_stmt  goto 71
	sleep  goto 72
	yield  goto 73
	switch_stmt  goto 74
	var  goto 78
	var_list  goto 79
	math_expr  goto 84

state 269
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN END.    (59)

	.  reduce 59 (src line 553)


state 270
	for_loop_stmt:  FOR var ASSIGN assign_value RIGHT_POINTER cmp_value ARG_SPLITTER expr_value THEN block END.    (58)

	.  reduce 58 (src line 515)


69 terminals, 53 nonterminals
156 grammar rules, 271/8000 states
56 shift/reduce, 0 reduce/reduce conflicts reported
102 working sets used
memory: parser 1026/120000
230 extra closures
1387 shift entries, 68 exceptions
284 goto entries
586 entries saved by goto default
Optimizer space used: output 1228/120000
1228 table entries, 397 zero
maximum spread: 69, maximum offset: 268
